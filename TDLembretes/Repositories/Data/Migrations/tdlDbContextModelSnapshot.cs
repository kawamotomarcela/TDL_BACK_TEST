// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TDLembretes.Repositories.Data;

#nullable disable

namespace TDLembretes.Migrations
{
    [DbContext(typeof(tdlDbContext))]
    partial class tdlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TDLembretes.Models.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CustoEmPontos")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuantidadeDisponivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("TDLembretes.Models.TarefaOficial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ComprovacaoUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Pontos")
                        .HasColumnType("int");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<int>("StatusComprovacao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TarefasOficial");
                });

            modelBuilder.Entity("TDLembretes.Models.TarefaPersonalizada", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("AlarmeAtivado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TarefasPersonalizada");
                });

            modelBuilder.Entity("TDLembretes.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Pontos")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TDLembretes.Models.UsuarioTarefasOficiais", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TarefaOficialId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UsuarioId", "TarefaOficialId");

                    b.HasIndex("TarefaOficialId");

                    b.ToTable("UsuariosTarefasOficiais");
                });

            modelBuilder.Entity("TDLembretes.Models.UsuarioTarefasPersonalizadas", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TarefaPersonalizadaId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UsuarioId", "TarefaPersonalizadaId");

                    b.HasIndex("TarefaPersonalizadaId");

                    b.ToTable("UsuariosTarefasPersonalizadas");
                });

            modelBuilder.Entity("TDLembretes.Models.UsuarioTarefasOficiais", b =>
                {
                    b.HasOne("TDLembretes.Models.TarefaOficial", "TarefaOficial")
                        .WithMany()
                        .HasForeignKey("TarefaOficialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TDLembretes.Models.Usuario", "Usuario")
                        .WithMany("TarefasOficiais")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TarefaOficial");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TDLembretes.Models.UsuarioTarefasPersonalizadas", b =>
                {
                    b.HasOne("TDLembretes.Models.TarefaPersonalizada", "TarefaPersonalizada")
                        .WithMany()
                        .HasForeignKey("TarefaPersonalizadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TDLembretes.Models.Usuario", "Usuario")
                        .WithMany("TarefasPersonalizadas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TarefaPersonalizada");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TDLembretes.Models.Usuario", b =>
                {
                    b.Navigation("TarefasOficiais");

                    b.Navigation("TarefasPersonalizadas");
                });
#pragma warning restore 612, 618
        }
    }
}
